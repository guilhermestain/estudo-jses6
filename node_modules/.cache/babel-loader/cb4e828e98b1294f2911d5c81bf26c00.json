{"ast":null,"code":"var _jsxFileName = \"/home/guilhermestain/development/estoque/estoque-front/src/pages/NovaEntrada/EntradaContainer/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { Input, Select, InputNumber, Button, Modal, message } from 'antd';\nimport { validators } from './validators';\nconst Option = Select.Option;\n\nclass NovaEntrada extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messageError: false,\n      messageSucesso: false,\n      estoque: 'REALPONTO',\n      nomeProduto: '',\n      fornecedor: '',\n      quant: '1',\n      modalConfirm: false,\n      arrayProdutos: [],\n      fieldFalha: {\n        nomeProduto: false,\n        fornecedor: false\n      },\n      message: {\n        nomeProduto: '',\n        fornecedor: ''\n      }\n    };\n\n    this.success = () => {\n      message.success('Entrada realizada com sucesso');\n    };\n\n    this.error = () => {\n      message.error('Entrada não foi realizada com sucesso');\n    };\n\n    this.errorNome = () => {\n      message.error('O nome do produto é obrigatório');\n    };\n\n    this.errorForn = () => {\n      message.error('O fornecedor é obrigatório');\n    };\n\n    this.errorOsDois = () => {\n      message.error('O nome do produto e o fornecedor são obrigatórios');\n    };\n\n    this.funcaoBosta = () => {\n      if (this.state.nomeProduto === '' && this.state.fornecedor === '') {\n        this.errorOsDois();\n      } else if (this.state.nomeProduto === '' && this.state.fornecedor !== '') {\n        this.errorNome();\n      } else if (this.state.nomeProduto !== '' && this.state.fornecedor === '') {\n        this.errorForn();\n      } else if (this.state.nomeProduto !== '' && this.state.fornecedor !== '') {\n        this.Confirm();\n      }\n    };\n\n    this.onChangeSelect = value => {\n      this.setState({\n        estoque: value\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        nomeProduto: value\n      });\n    };\n\n    this.onChangeQuant = value => {\n      this.setState({\n        quant: value\n      });\n    };\n\n    this.onBlurValidator = e => {\n      const _validators = validators(e.target.name, e.target.value, this.state),\n            nome = _validators.nome,\n            valor = _validators.valor,\n            fieldFalha = _validators.fieldFalha,\n            message = _validators.message;\n\n      this.setState({\n        [nome]: valor,\n        fieldFalha,\n        message\n      });\n    };\n\n    this.Confirm = () => {\n      this.setState({\n        modalConfirm: true\n      });\n    };\n\n    this.add = async () => {\n      await this.setState({\n        nomeProduto: '',\n        fornecedor: '',\n        quant: '1'\n      });\n    };\n\n    this.modalConfirm = () => React.createElement(Modal, {\n      title: \"Confirmar produto\",\n      visible: this.state.modalConfirm,\n      onOk: this.handleOk,\n      okText: \"Salvar\",\n      onCancel: this.handleOk,\n      cancelText: \"Cancelar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-ProdutoModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Produto:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.nomeProduto))), React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-quantModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, \"Quantidade:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, this.state.quant))), React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-estoqueModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Estoque:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142\n      },\n      __self: this\n    }, this.state.estoque))), React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-fornecedorModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"Fornecedor:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.fornecedor))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"div-card-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"linhaTexto-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Nova entrada\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-nome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textNome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"Nome do produto:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.nomeProduto ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"nomeProduto\",\n      value: this.state.nomeProduto,\n      placeholder: \"Digite o nome do produto\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), this.state.fieldFalha.nomeProduto ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }, this.state.message.nomeProduto) : null)), React.createElement(\"div\", {\n      className: \"div-estoque-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, \"Estoque:\"), React.createElement(Select, {\n      value: this.state.estoque,\n      style: {\n        width: '100%'\n      },\n      onChange: this.onChangeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"REALPONTO\"), React.createElement(Option, {\n      value: \"NOVA REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, \"NOVA REALPONTO\"), React.createElement(Option, {\n      value: \"PONTOREAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190\n      },\n      __self: this\n    }, \"PONTOREAL\")))), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-nome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197\n      },\n      __self: this\n    }, \"Fornecedor:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.fornecedor ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"fornecedor\",\n      value: this.state.fornecedor,\n      placeholder: \"Digite o fornecedor\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }), this.state.fieldFalha.fornecedor ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, this.state.message.fornecedor) : null)), React.createElement(\"div\", {\n      className: \"div-quant-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Quant:\"), React.createElement(InputNumber, {\n      min: 1,\n      defaultValue: this.state.quant,\n      value: this.state.quant,\n      onChange: this.onChangeQuant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"button\",\n      type: \"primary\",\n      onClick: this.funcaoBosta,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(this.modalConfirm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 224\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NovaEntrada;","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/pages/NovaEntrada/EntradaContainer/index.js"],"names":["React","Component","Input","Select","InputNumber","Button","Modal","message","validators","Option","NovaEntrada","state","messageError","messageSucesso","estoque","nomeProduto","fornecedor","quant","modalConfirm","arrayProdutos","fieldFalha","success","error","errorNome","errorForn","errorOsDois","funcaoBosta","Confirm","onChangeSelect","value","setState","onChange","e","target","name","handleChange","onChangeQuant","onBlurValidator","nome","valor","add","handleOk","render","width","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport { Input, Select, InputNumber, Button, Modal, message } from 'antd'\nimport { validators } from './validators'\n\n\nconst { Option } = Select;\n\nclass NovaEntrada extends Component {\n\n  state = {\n    messageError: false,\n    messageSucesso: false,\n    estoque: 'REALPONTO',\n    nomeProduto: '',\n    fornecedor: '',\n    quant: '1',\n    modalConfirm: false,\n    arrayProdutos: [],\n    fieldFalha: {\n      nomeProduto: false,\n      fornecedor: false\n    },\n    message: {\n      nomeProduto: '',\n      fornecedor: '',\n    },\n  }\n\n  success = () => {\n    message.success('Entrada realizada com sucesso');\n  };\n\n  error = () => {\n    message.error('Entrada não foi realizada com sucesso');\n  };\n  \n  errorNome = () => {\n    message.error('O nome do produto é obrigatório');\n  };\n\n  errorForn = () => {\n    message.error('O fornecedor é obrigatório');\n  };\n\n  errorOsDois = () => {\n    message.error('O nome do produto e o fornecedor são obrigatórios');\n  };\n  \n\n  funcaoBosta = () => {\n    if(this.state.nomeProduto === '' && this.state.fornecedor === ''){\n      this.errorOsDois()\n    }else if(this.state.nomeProduto === '' && this.state.fornecedor !== ''){\n      this.errorNome()\n    }else if(this.state.nomeProduto !== '' && this.state.fornecedor === ''){\n      this.errorForn()\n    }else if(this.state.nomeProduto !== '' && this.state.fornecedor !== ''){\n      this.Confirm()\n    }\n  }\n\n  onChangeSelect = (value) => {\n    this.setState({\n      estoque: value\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (value) => {\n    this.setState({\n      nomeProduto: value\n    })\n  }\n\n  onChangeQuant = (value) => {\n    this.setState({\n      quant: value\n    })\n  }\n\n  onBlurValidator = (e) => {\n    const {\n      nome,\n      valor,\n      fieldFalha,\n      message\n    } = validators(e.target.name, e.target.value, this.state)\n\n    this.setState({\n      [nome]: valor,\n      fieldFalha,\n      message\n    })\n  }\n\n  Confirm = () => {\n    this.setState({\n      modalConfirm: true\n    })\n  }\n\n  add = async () => {\n    await this.setState({\n      nomeProduto: '',\n      fornecedor: '',\n      quant: '1'\n    })\n  }\n  \n  modalConfirm = () => (\n    <Modal\n      title=\"Confirmar produto\"\n      visible={this.state.modalConfirm}\n      onOk={this.handleOk}\n      okText='Salvar'\n      onCancel={this.handleOk}\n      cancelText='Cancelar'\n    >\n      <div className='linhaModal-entrada'>\n        <div className='div-ProdutoModal-entrada'>\n          <div className='div-textModal-entrada'>Produto:</div>\n          <label className='label-entrada'>{this.state.nomeProduto}</label>\n        </div>\n      </div>\n\n      <div className='linhaModal-entrada'>\n        <div className='div-quantModal-entrada'>\n          <div className='div-textModal-entrada'>Quantidade:</div>\n          <label className='label-entrada'>{this.state.quant}</label>\n        </div>\n      </div>\n\n      <div className='linhaModal-entrada'>\n        <div className='div-estoqueModal-entrada'>\n          <div className='div-textModal-entrada'>Estoque:</div>\n          <label className='label-entrada'>{this.state.estoque}</label>\n        </div>\n      </div>\n\n      <div className='linhaModal-entrada'>\n        <div className='div-fornecedorModal-entrada'>\n          <div className='div-textModal-entrada'>Fornecedor:</div>\n          <label className='label-entrada'>{this.state.fornecedor}</label>\n        </div>\n      </div>\n    </Modal>\n  )\n\n  render() {\n    return (\n      <div className='div-card-entrada'>\n        <div className='linhaTexto-entrada'>\n          <h1 className='h1-entrada'>Nova entrada</h1>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-nome-entrada'>\n            <div className='div-textNome-entrada'>Nome do produto:</div>\n            <div className='div-inputs'>\n            <Input\n            className={\n              this.state.fieldFalha.nomeProduto ?\n                'div-inputError' :\n                'input-100'}\n              style={{ width: '100%' }}\n              name='nomeProduto'\n              value={this.state.nomeProduto}\n              placeholder=\"Digite o nome do produto\"\n              onChange={this.onChange}\n              onBlur={this.onBlurValidator}\n            />\n            {this.state.fieldFalha.nomeProduto ?\n              <p className='div-feedbackError'>\n                {this.state.message.nomeProduto}\n              </p> : null}\n              </div>\n          </div>\n\n          <div className='div-estoque-entrada'>\n            <div className='div-text-entrada'>Estoque:</div>\n            <Select value={this.state.estoque} style={{ width: '100%' }} onChange={this.onChangeSelect} >\n              <Option value='REALPONTO'>REALPONTO</Option>\n              <Option value='NOVA REALPONTO'>NOVA REALPONTO</Option>\n              <Option value='PONTOREAL'>PONTOREAL</Option>\n            </Select>\n          </div>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-nome-entrada'>\n            <div className='div-text-entrada'>Fornecedor:</div>\n            <div className='div-inputs'>\n            <Input\n            className={\n              this.state.fieldFalha.fornecedor ?\n                'div-inputError' :\n                'input-100'}\n              style={{ width: '100%' }}\n              name='fornecedor'\n              value={this.state.fornecedor}\n              placeholder=\"Digite o fornecedor\"\n              onChange={this.onChange}\n              onBlur={this.onBlurValidator}\n            />\n            {this.state.fieldFalha.fornecedor ?\n              <p className='div-feedbackError'>\n                {this.state.message.fornecedor}\n              </p> : null}\n              </div>\n          </div>\n\n          <div className='div-quant-entrada'>\n            <div className='div-text-entrada'>Quant:</div>\n            <InputNumber min={1} defaultValue={this.state.quant} value={this.state.quant} onChange={this.onChangeQuant} />\n          </div>\n\n          <Button className='button' type=\"primary\" onClick={this.funcaoBosta} loading={this.state.loading}>Salvar</Button>\n          <this.modalConfirm/>\n\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default NovaEntrada"]},"metadata":{},"sourceType":"module"}