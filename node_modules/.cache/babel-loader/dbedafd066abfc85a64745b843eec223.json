{"ast":null,"code":"var _jsxFileName = \"/home/guilhermestain/development/estoque/estoque-front/src/App.js\";\nimport React from 'react';\nimport { applyMiddleware, createStore } from 'redux'; // import { connectRouter, routerMiddleware } from 'connected-react-router'\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport promise from 'redux-promise';\nimport multi from 'redux-multi';\nimport thunk from 'redux-thunk';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage'; // import { MemoryRouter } from 'react-router-dom'\n\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport reducers from './store/reducers';\nimport Routes from './routes'; // import history from './routes/history'\n\nconst persistConfig = {\n  key: 'root',\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, reducers);\nexport const store = applyMiddleware(thunk, multi, promise)(createStore)(persistedReducer, composeWithDevTools()); // const middlewarer = [\n//   thunk,\n//   multi,\n//   promise,\n//   routerMiddleware(history),\n//   persistedReducer,\n//   composeWithDevTools(),\n// ]\n// export const store = createStore(connectRouter(history)(() => {}), applyMiddleware(...middlewarer))\n\nconst persistor = persistStore(store);\n\nconst App = () => // <MemoryRouter >\nReact.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 44\n  },\n  __self: this\n}, React.createElement(PersistGate, {\n  loading: null,\n  persistor: persistor,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 45\n  },\n  __self: this\n}, React.createElement(Routes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 46\n  },\n  __self: this\n}))) // </MemoryRouter>\n;\n\nexport default App;","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/App.js"],"names":["React","applyMiddleware","createStore","Provider","PersistGate","promise","multi","thunk","persistStore","persistReducer","storage","composeWithDevTools","reducers","Routes","persistConfig","key","persistedReducer","store","persistor","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C,C,CACA;;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB,C,CACA;;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,GAAG,EAAE,MADe;AAEpBL,EAAAA;AAFoB,CAAtB;AAKA,MAAMM,gBAAgB,GAAGP,cAAc,CAACK,aAAD,EAAgBF,QAAhB,CAAvC;AAGA,OAAO,MAAMK,KAAK,GAAGhB,eAAe,CAACM,KAAD,EAAQD,KAAR,EAAeD,OAAf,CAAf,CAAuCH,WAAvC,EAAoDc,gBAApD,EAAsEL,mBAAmB,EAAzF,CAAd,C,CAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;AAGA,MAAMO,SAAS,GAAGV,YAAY,CAACS,KAAD,CAA9B;;AAEA,MAAME,GAAG,GAAG,MACV;AACA,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEF,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,WAAD;AAAa,EAAA,OAAO,EAAE,IAAtB;AAA4B,EAAA,SAAS,EAAEC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CADF,CAFU,CAQV;AARF;;AAUA,eAAeC,GAAf","sourcesContent":["import React from 'react';\nimport { applyMiddleware, createStore } from 'redux'\n// import { connectRouter, routerMiddleware } from 'connected-react-router'\nimport { Provider } from 'react-redux'\nimport { PersistGate } from 'redux-persist/integration/react'\nimport promise from 'redux-promise'\nimport multi from 'redux-multi'\nimport thunk from 'redux-thunk'\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n// import { MemoryRouter } from 'react-router-dom'\nimport { composeWithDevTools } from 'redux-devtools-extension'\n\nimport reducers from './store/reducers'\nimport Routes from './routes'\n// import history from './routes/history'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n}\n\nconst persistedReducer = persistReducer(persistConfig, reducers)\n\n\nexport const store = applyMiddleware(thunk, multi, promise)(createStore)(persistedReducer, composeWithDevTools())\n\n// const middlewarer = [\n//   thunk,\n//   multi,\n//   promise,\n//   routerMiddleware(history),\n//   persistedReducer,\n//   composeWithDevTools(),\n// ]\n\n// export const store = createStore(connectRouter(history)(() => {}), applyMiddleware(...middlewarer))\n\n      \nconst persistor = persistStore(store)\n      \nconst App = () => (\n  // <MemoryRouter >\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <Routes />\n    </PersistGate>\n  </Provider>\n\n  // </MemoryRouter>\n)\nexport default App"]},"metadata":{},"sourceType":"module"}