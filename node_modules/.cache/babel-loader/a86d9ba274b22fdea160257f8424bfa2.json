{"ast":null,"code":"import axios from 'axios';\nimport { BACKEND_URL } from './var';\nimport { store } from '../App';\nexport const newEntrada = async values => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.post(\"\".concat(BACKEND_URL, \"/api/entrance\"), values, {\n    headers: headers\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/services/entrada.js"],"names":["axios","BACKEND_URL","store","newEntrada","values","storeObject","getState","headers","token","auth","username","response","post","then","resp","catch","error","console","log","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,KAAT,QAAsB,QAAtB;AAGA,OAAO,MAAMC,UAAU,GAAG,MAAOC,MAAP,IAAkB;AAC1C,QAAMC,WAAW,GAAGH,KAAK,CAACI,QAAN,EAApB;AAEA,QAAMC,OAAO,GAAG;AACdC,IAAAA,KAAK,EAAEH,WAAW,CAACI,IAAZ,CAAiBD,KADV;AAEdE,IAAAA,QAAQ,EAAEL,WAAW,CAACI,IAAZ,CAAiBC;AAFb,GAAhB;AAKA,MAAIC,QAAQ,GAAG,EAAf;AAEA,QAAMX,KAAK,CAACY,IAAN,WAAcX,WAAd,oBAA0CG,MAA1C,EAAkD;AAAEG,IAAAA,OAAO,EAAEA;AAAX,GAAlD,EAAwEM,IAAxE,CACJC,IAAI,IAAI;AACNH,IAAAA,QAAQ,GAAGG,IAAX;AACD,GAHG,EAIJC,KAJI,CAIGC,KAAD,IAAW;AACjB,QAAIA,KAAK,CAACL,QAAV,EAAoB;AAClBA,MAAAA,QAAQ,GAAGK,KAAK,CAACL,QAAjB;AACD,KAFD,MAEO;AACLM,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAAK,CAACG,OAA3B;AACD;AACF,GAVK,CAAN;AAWA,SAAOR,QAAP;AACD,CAtBM","sourcesContent":["import axios from 'axios'\nimport { BACKEND_URL } from './var'\nimport { store } from '../App'\n\n\nexport const newEntrada = async (values) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.post(`${BACKEND_URL}/api/entrance`, values, { headers: headers }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n}"]},"metadata":{},"sourceType":"module"}