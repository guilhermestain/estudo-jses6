{"ast":null,"code":"var _jsxFileName = \"/home/guilhermestain/development/estoque/estoque-front/src/pages/index.js\";\nimport React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport Dash from './Dash';\nimport CompanyRoute from './Company';\nimport EquipRoute from './Equip';\nimport EntranceRoute from './Entrance';\nimport PecaRoute from './Peca';\nimport AnaliseRoute from './Analise';\nimport TecnicoRoute from './Tecnico';\nimport TypeAccountRoute from './TypeAccount';\nimport NewUserRoute from './NovoUsuario';\nimport AcessoriosRoute from './Acessorios';\nimport { auth } from '../services/auth';\nimport { Logout } from './Login/LoginRedux/action';\nimport ScreenControlRoute from './ScreenControl';\n\nclass PagesRoute extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      auth: true\n    };\n\n    this.logout = async () => {\n      await this.props.Logout(this.props.auth.token);\n    };\n\n    this.auth = async () => {\n      // console.log('hduad yua')\n      const value = {\n        token: this.props.auth.token,\n        username: this.props.auth.username\n      };\n      let response = {};\n      response = await auth(value).then(resp => this.setState({\n        auth: resp.data\n      } // console.log(this.state)\n      ));\n      return response;\n    };\n\n    this.componentDidMount = () => {\n      this.auth();\n    };\n  }\n\n  render() {\n    if (this.state.auth) {\n      return React.createElement(Switch, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      });\n    } else {\n      this.logout();\n      return React.createElement(Redirect, {\n        to: \"/login\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      });\n    }\n  }\n\n}\n\nfunction mapDispacthToProps(dispach) {\n  return bindActionCreators({\n    Logout\n  }, dispach);\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(PagesRoute);","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/pages/index.js"],"names":["React","Component","Route","Redirect","Switch","connect","bindActionCreators","Dash","CompanyRoute","EquipRoute","EntranceRoute","PecaRoute","AnaliseRoute","TecnicoRoute","TypeAccountRoute","NewUserRoute","AcessoriosRoute","auth","Logout","ScreenControlRoute","PagesRoute","state","logout","props","token","value","username","response","then","resp","setState","data","componentDidMount","render","mapDispacthToProps","dispach","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,MAA1B,QAAwC,kBAAxC;AAEA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,UAAP,MAAuB,SAAvB;AACA,OAAOC,aAAP,MAA0B,YAA1B;AACA,OAAOC,SAAP,MAAsB,QAAtB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,YAAP,MAAyB,WAAzB;AACA,OAAOC,gBAAP,MAA6B,eAA7B;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,MAAT,QAAuB,2BAAvB;AACA,OAAOC,kBAAP,MAA+B,iBAA/B;;AAIA,MAAMC,UAAN,SAAyBnB,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAEjCoB,KAFiC,GAEzB;AACNJ,MAAAA,IAAI,EAAE;AADA,KAFyB;;AAAA,SAMjCK,MANiC,GAMxB,YAAY;AACnB,YAAM,KAAKC,KAAL,CAAWL,MAAX,CAAkB,KAAKK,KAAL,CAAWN,IAAX,CAAgBO,KAAlC,CAAN;AACD,KARgC;;AAAA,SAUjCP,IAViC,GAU1B,YAAY;AACjB;AACA,YAAMQ,KAAK,GAAG;AACZD,QAAAA,KAAK,EAAE,KAAKD,KAAL,CAAWN,IAAX,CAAgBO,KADX;AAEZE,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWN,IAAX,CAAgBS;AAFd,OAAd;AAKA,UAAIC,QAAQ,GAAG,EAAf;AAEAA,MAAAA,QAAQ,GAAG,MAAMV,IAAI,CAACQ,KAAD,CAAJ,CAAYG,IAAZ,CACfC,IAAI,IAAI,KAAKC,QAAL,CAAc;AACpBb,QAAAA,IAAI,EAAEY,IAAI,CAACE;AADS,OAAd,CAGN;AAHM,OADO,CAAjB;AAQA,aAAOJ,QAAP;AACD,KA5BgC;;AAAA,SA8BjCK,iBA9BiC,GA8Bb,MAAM;AACxB,WAAKf,IAAL;AACD,KAhCgC;AAAA;;AAkCjCgB,EAAAA,MAAM,GAAG;AACP,QAAI,KAAKZ,KAAL,CAAWJ,IAAf,EAAqB;AACnB,aACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAeD,KAhBD,MAgBO;AACL,WAAKK,MAAL;AACA,aAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACD;AACF;;AAvDgC;;AA0DnC,SAASY,kBAAT,CAA4BC,OAA5B,EAAqC;AACnC,SAAO7B,kBAAkB,CAAC;AAAEY,IAAAA;AAAF,GAAD,EAAaiB,OAAb,CAAzB;AACD;;AAED,SAASC,eAAT,CAAyBf,KAAzB,EAAgC;AAC9B,SAAO;AACLJ,IAAAA,IAAI,EAAEI,KAAK,CAACJ;AADP,GAAP;AAGD;;AAED,eAAeZ,OAAO,CAAC+B,eAAD,EAAkBF,kBAAlB,CAAP,CAA6Cd,UAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Route, Redirect, Switch } from 'react-router-dom'\n\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport Dash from './Dash';\n\nimport CompanyRoute from './Company'\nimport EquipRoute from './Equip'\nimport EntranceRoute from './Entrance';\nimport PecaRoute from './Peca'\nimport AnaliseRoute from './Analise'\nimport TecnicoRoute from './Tecnico';\nimport TypeAccountRoute from './TypeAccount';\nimport NewUserRoute from './NovoUsuario';\nimport AcessoriosRoute from './Acessorios';\nimport { auth } from '../services/auth'\nimport { Logout } from './Login/LoginRedux/action'\nimport ScreenControlRoute from './ScreenControl';\n\n\n\nclass PagesRoute extends Component {\n\n  state = {\n    auth: true\n  }\n\n  logout = async () => {\n    await this.props.Logout(this.props.auth.token)\n  }\n\n  auth = async () => {\n    // console.log('hduad yua')\n    const value = {\n      token: this.props.auth.token,\n      username: this.props.auth.username\n    }\n\n    let response = {}\n\n    response = await auth(value).then(\n      resp => this.setState({\n        auth: resp.data\n      },\n        // console.log(this.state)\n      )\n    )\n\n    return response\n  }\n\n  componentDidMount = () => {\n    this.auth()\n  }\n\n  render() {\n    if (this.state.auth) {\n      return (\n        <Switch>\n          {/* <Route exact path='/logged/dash' component={Dash} />\n          <Route path='/logged/entrance' component={EntranceRoute} />\n          <Route path='/logged/analise' component={AnaliseRoute} />\n          <Route path='/logged/user' component={NewUserRoute} />\n          <Route path='/logged/typeAccount' component={TypeAccountRoute} />\n          <Route path='/logged/tecnico' component={TecnicoRoute} />\n          <Route path='/logged/company' component={CompanyRoute} />\n          <Route path='/logged/equip' component={EquipRoute} />\n          <Route path='/logged/peca' component={PecaRoute} />\n          <Route path='/logged/acessories' component={AcessoriosRoute} />\n          <Route path='/logged/screenControl' component={ScreenControlRoute} /> */}\n        </Switch>\n      )\n    } else {\n      this.logout()\n      return <Redirect to='/login' />\n    }\n  }\n}\n\nfunction mapDispacthToProps(dispach) {\n  return bindActionCreators({ Logout }, dispach)\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth,\n  }\n}\n\nexport default connect(mapStateToProps, mapDispacthToProps)(PagesRoute)"]},"metadata":{},"sourceType":"module"}