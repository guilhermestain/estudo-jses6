{"ast":null,"code":"var _jsxFileName = \"/home/guilhermestain/development/estoque/estoque-front/src/pages/NovaEntrada/EntradaContainer/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { Input, Select, InputNumber, Button, message } from 'antd';\nimport { validators } from './validators';\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\nconst children = [];\n\nfor (let i = 10; i < 36; i++) {\n  children.push(React.createElement(Option, {\n    key: i.toString(36) + i,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, i.toString(36) + i));\n}\n\nclass NovaEntrada extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messageError: false,\n      messageSucesso: false,\n      descricao: '',\n      estoque: 'REALPONTO',\n      nomeProduto: '',\n      quant: '1',\n      arrayProdutos: [],\n      carrinho: [],\n      fieldFalha: {\n        nomeProduto: false\n      },\n      message: {\n        nomeProduto: ''\n      }\n    };\n\n    this.success = () => {\n      message.success('Entrada realizada com sucesso');\n    };\n\n    this.error = () => {\n      message.error('Entrada não foi realizada com sucesso');\n    };\n\n    this.errorButton = () => {\n      message.error('O nome do produto é obrigatório');\n    };\n\n    this.onChangeSelect = value => {\n      this.setState({\n        estoque: value\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        nomeProduto: value\n      });\n    };\n\n    this.onChangeQuant = value => {\n      this.setState({\n        quant: value\n      });\n    };\n\n    this.onBlurValidator = e => {\n      const _validators = validators(e.target.name, e.target.value, this.state),\n            nome = _validators.nome,\n            valor = _validators.valor,\n            fieldFalha = _validators.fieldFalha,\n            message = _validators.message;\n\n      this.setState({\n        [nome]: valor,\n        fieldFalha,\n        message\n      });\n    };\n\n    this.add = async () => {\n      await this.setState({\n        carrinho: [{\n          nomeProdutoCarrinho: this.state.nomeProduto,\n          quantCarrinho: this.state.quant\n        }, ...this.state.carrinho]\n      });\n      await this.setState({\n        nomeProduto: '',\n        quant: '1'\n      });\n    };\n\n    this.remove = value => {\n      const oldCarrinho = this.state.carrinho;\n      const newCarrinho = oldCarrinho.filter(valor => valor !== value);\n      this.setState({\n        carrinho: newCarrinho\n      });\n    };\n  }\n\n  render() {\n    console.log(this.state);\n    return React.createElement(\"div\", {\n      className: \"div-card-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"linhaTexto-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Nova entrada\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-descricao-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"Descri\\xE7\\xE3o:\"), React.createElement(TextArea, {\n      className: \"input-100\",\n      placeholder: \"Digite a descri\\xE7\\xE3o\",\n      autosize: {\n        minRows: 2,\n        maxRows: 4\n      },\n      name: \"descricao\",\n      rows: 4,\n      value: this.state.descricao,\n      onChange: this.onChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"div-estoque-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Estoque:\"), React.createElement(Select, {\n      value: this.state.estoque,\n      style: {\n        width: '100%'\n      },\n      onChange: this.onChangeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, \"REALPONTO\"), React.createElement(Option, {\n      value: \"NOVA REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, \"NOVA REALPONTO\"), React.createElement(Option, {\n      value: \"PONTOREAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"PONTOREAL\")))), React.createElement(\"div\", {\n      className: \"div-separeteLine-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"linhaTexto-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, \"Produtos da compra\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-nome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textNome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Nome do produto:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.nomeProduto ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"nomeProduto\",\n      value: this.state.nomeProduto,\n      placeholder: \"Digite o nome do produto\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), this.state.fieldFalha.nomeProduto ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, this.state.message.nomeProduto) : null)), React.createElement(\"div\", {\n      className: \"div-quant-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, \"Quant:\"), React.createElement(InputNumber, {\n      min: 1,\n      defaultValue: this.state.quant,\n      value: this.state.quant,\n      onChange: this.onChangeQuant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    })), this.state.nomeProduto === '' ? React.createElement(Button, {\n      type: \"primary\",\n      className: \"button\",\n      onClick: this.errorButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, \"Adicionar\") : React.createElement(Button, {\n      type: \"primary\",\n      className: \"button\",\n      onClick: this.add,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"Adicionar\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h4-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }, \"Produtos selecionados\")), this.state.carrinho.length === 0 ? null : this.state.carrinho.map(valor => React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-produtos-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199\n      },\n      __self: this\n    }, valor.nomeProdutoCarrinho), React.createElement(\"h1\", {\n      className: \"h1-produtos-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200\n      },\n      __self: this\n    }, valor.quantCarrinho, \" UN\"), React.createElement(Button, {\n      type: \"primary\",\n      className: \"button-remove-entrada\",\n      onClick: () => this.remove(valor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201\n      },\n      __self: this\n    }, \"Remover\"))), React.createElement(\"div\", {\n      className: \"linha-button-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      type: \"primary\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205\n      },\n      __self: this\n    }, \"Salvar\")));\n  }\n\n}\n\nexport default NovaEntrada;","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/pages/NovaEntrada/EntradaContainer/index.js"],"names":["React","Component","Input","Select","InputNumber","Button","message","validators","Option","TextArea","children","i","push","toString","NovaEntrada","state","messageError","messageSucesso","descricao","estoque","nomeProduto","quant","arrayProdutos","carrinho","fieldFalha","success","error","errorButton","onChangeSelect","value","setState","onChange","e","target","name","handleChange","onChangeQuant","onBlurValidator","nome","valor","add","nomeProdutoCarrinho","quantCarrinho","remove","oldCarrinho","newCarrinho","filter","render","console","log","minRows","maxRows","width","length","map","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport { Input, Select, InputNumber, Button, message } from 'antd'\nimport { validators } from './validators'\n\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\nconst children = [];\nfor (let i = 10; i < 36; i++) {\n  children.push(<Option key={i.toString(36) + i}>{i.toString(36) + i}</Option>);\n}\n\nclass NovaEntrada extends Component {\n\n  state = {\n    messageError: false,\n    messageSucesso: false,\n    descricao: '',\n    estoque: 'REALPONTO',\n    nomeProduto: '',\n    quant: '1',\n    arrayProdutos: [],\n    carrinho: [],\n    fieldFalha: {\n      nomeProduto: false,\n    },\n    message: {\n      nomeProduto: ''\n    },\n  }\n\n  success = () => {\n    message.success('Entrada realizada com sucesso');\n  };\n\n  error = () => {\n    message.error('Entrada não foi realizada com sucesso');\n  };\n  \n  errorButton = () => {\n    message.error('O nome do produto é obrigatório');\n  };\n  \n\n  onChangeSelect = (value) => {\n    this.setState({\n      estoque: value\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (value) => {\n    this.setState({\n      nomeProduto: value\n    })\n  }\n\n  onChangeQuant = (value) => {\n    this.setState({\n      quant: value\n    })\n  }\n\n  onBlurValidator = (e) => {\n    const {\n      nome,\n      valor,\n      fieldFalha,\n      message\n    } = validators(e.target.name, e.target.value, this.state)\n\n    this.setState({\n      [nome]: valor,\n      fieldFalha,\n      message\n    })\n  }\n\n  add = async () => {\n\n    await this.setState({\n      carrinho: [{\n        nomeProdutoCarrinho: this.state.nomeProduto,\n        quantCarrinho: this.state.quant\n      }, ...this.state.carrinho]\n    })\n\n    await this.setState({\n      nomeProduto: '',\n      quant: '1'\n    })\n  }\n\n  remove = (value) => {\n    const oldCarrinho = this.state.carrinho\n    const newCarrinho = oldCarrinho.filter(valor => valor !== value)\n\n    this.setState({\n      carrinho: newCarrinho\n    })\n  }\n\n  render() {\n    console.log(this.state)\n    return (\n      <div className='div-card-entrada'>\n        <div className='linhaTexto-entrada'>\n          <h1 className='h1-entrada'>Nova entrada</h1>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-descricao-entrada'>\n            <div className='div-text-entrada'>Descrição:</div>\n            <TextArea\n              className='input-100'\n              placeholder=\"Digite a descrição\"\n              autosize={{ minRows: 2, maxRows: 4 }}\n              name='descricao'\n              rows={4}\n              value={this.state.descricao}\n              onChange={this.onChange}\n            />\n          </div>\n\n          <div className='div-estoque-entrada'>\n            <div className='div-text-entrada'>Estoque:</div>\n            <Select value={this.state.estoque} style={{ width: '100%' }} onChange={this.onChangeSelect} >\n              <Option value='REALPONTO'>REALPONTO</Option>\n              <Option value='NOVA REALPONTO'>NOVA REALPONTO</Option>\n              <Option value='PONTOREAL'>PONTOREAL</Option>\n            </Select>\n          </div>\n        </div>\n        <div className='div-separeteLine-entrada'></div>\n\n        <div className='linhaTexto-entrada'>\n          <h1 className='h1-entrada'>Produtos da compra</h1>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-nome-entrada'>\n            <div className='div-textNome-entrada'>Nome do produto:</div>\n            <div className='div-inputs'>\n            <Input\n            className={\n              this.state.fieldFalha.nomeProduto ?\n                'div-inputError' :\n                'input-100'}\n              style={{ width: '100%' }}\n              name='nomeProduto'\n              value={this.state.nomeProduto}\n              placeholder=\"Digite o nome do produto\"\n              onChange={this.onChange}\n              onBlur={this.onBlurValidator}\n            />\n            {this.state.fieldFalha.nomeProduto ?\n              <p className='div-feedbackError'>\n                {this.state.message.nomeProduto}\n              </p> : null}\n              </div>\n          </div>\n\n          <div className='div-quant-entrada'>\n            <div className='div-text-entrada'>Quant:</div>\n            <InputNumber min={1} defaultValue={this.state.quant} value={this.state.quant} onChange={this.onChangeQuant} />\n          </div>\n\n          {this.state.nomeProduto === '' ? \n          <Button\n            type='primary'\n            className='button'\n            onClick={this.errorButton}\n          >\n            Adicionar\n          </Button> :  \n          <Button\n            type='primary'\n            className='button'\n            onClick={this.add}\n          >\n            Adicionar\n            </Button>\n          }\n        </div>\n\n        <div className='linha1-entrada'>\n          <h2 className='h4-entrada'>Produtos selecionados</h2>\n        </div>\n\n        {this.state.carrinho.length === 0 ? null : this.state.carrinho.map((valor) =>\n          <div className='linha1-entrada'>\n            <h1 className='h1-produtos-entrada'>{valor.nomeProdutoCarrinho}</h1>\n            <h1 className='h1-produtos-entrada'>{valor.quantCarrinho} UN</h1>\n            <Button type='primary' className='button-remove-entrada' onClick={() => this.remove(valor)}>Remover</Button>\n          </div>)}\n\n        <div className='linha-button-entrada'>\n          <Button className='button' type=\"primary\" loading={this.state.loading}>Salvar</Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default NovaEntrada"]},"metadata":{},"sourceType":"module"}