{"ast":null,"code":"var _jsxFileName = \"/home/guilhermestain/development/estoque/estoque-front/src/pages/Cadastros/NovaEntrada/EntradaContainer/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { Input, Select, InputNumber, Button, Modal, message } from 'antd';\nimport { validators } from './validators';\nimport { newEntrada } from '../../../../services/entrada';\nimport { getItens } from '../../../../services/produto';\nconst Option = Select.Option;\nconst TextArea = Input.TextArea;\n\nclass NovaEntrada extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      itemArray: [],\n      serial: true,\n      numeroSerieTest: [],\n      messageError: false,\n      messageSucesso: false,\n      estoque: 'REALPONTO',\n      nomeProduto: '',\n      fornecedor: '',\n      quant: '1',\n      modalConfirm: false,\n      arrayProdutos: [],\n      fieldFalha: {\n        nomeProduto: false,\n        fornecedor: false\n      },\n      message: {\n        nomeProduto: '',\n        fornecedor: ''\n      }\n    };\n\n    this.componentDidMount = async () => {\n      await this.getAllItens();\n    };\n\n    this.getAllItens = async () => {\n      this.setState({\n        loading: true\n      });\n      await getItens().then(resposta => this.setState({\n        itemArray: resposta.data\n      }));\n      this.setState({\n        loading: false\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        modalConfirm: false,\n        nomeProduto: '',\n        fornecedor: '',\n        quant: '1'\n      });\n    };\n\n    this.handleCancel = () => {\n      this.setState({\n        modalConfirm: false\n      });\n    };\n\n    this.success = () => {\n      message.success('A entrada foi efetuada');\n    };\n\n    this.error = () => {\n      message.error('A entrada não foi efetuada');\n    };\n\n    this.errorNumeroSerie = () => {\n      message.error('Este equipamento ja foi registrado');\n    };\n\n    this.errorNome = () => {\n      message.error('O nome do produto é obrigatório');\n    };\n\n    this.errorForn = () => {\n      message.error('O fornecedor é obrigatório');\n    };\n\n    this.errorOsDois = () => {\n      message.error('O nome do produto e o fornecedor são obrigatórios');\n    };\n\n    this.messagesError = () => {\n      if (this.state.nomeProduto === '' && this.state.fornecedor === '') {\n        this.errorOsDois();\n      } else if (this.state.nomeProduto === '' && this.state.fornecedor !== '') {\n        this.errorNome();\n      } else if (this.state.nomeProduto !== '' && this.state.fornecedor === '') {\n        this.errorForn();\n      } else if (this.state.nomeProduto !== '' && this.state.fornecedor !== '') {\n        this.Confirm();\n      }\n    };\n\n    this.onChangeSelect = value => {\n      this.setState({\n        estoque: value\n      });\n    };\n\n    this.saveTargetNewEntrada = async () => {\n      this.setState({\n        loading: true\n      });\n      const values = {\n        amountAdded: this.state.quant,\n        stockBase: this.state.estoque,\n        // productId: this.state.produtoId,\n        // companyId: this.state.fornecedor,\n        // serial: this.state.numeroSerieTest,\n        responsibleUser: 'modrp'\n      };\n      const resposta = await newEntrada(values);\n      console.log(resposta);\n\n      if (resposta.status === 422) {\n        this.setState({\n          messageError: true,\n          fieldFalha: resposta.data.fields[0].field,\n          message: resposta.data.fields[0].message\n        });\n        await this.error();\n        this.setState({\n          loading: false,\n          messageError: false\n        });\n      }\n\n      if (resposta.status === 200) {\n        this.setState({\n          estoque: 'REALPONTO',\n          nomeProduto: '',\n          fornecedor: '',\n          quant: '1',\n          numeroSerieTest: [],\n          messageSuccess: true\n        });\n        await this.success();\n        this.setState({\n          loading: false,\n          messageSuccess: false\n        });\n      }\n    };\n\n    this.filter = async e => {\n      await this.setState({\n        numeroSerieTest: e.target.value\n      });\n      const teste = this.state.numeroSerieTest.split(/\\n/, 10);\n\n      if (/\\n/.test(this.state.numeroSerieTest[this.state.numeroSerieTest.length - 1])) {\n        let count = 0; // eslint-disable-next-line array-callback-return\n\n        teste.map(valor => {\n          if (valor === teste[teste.length - 2]) count++;\n        });\n\n        if (count > 1) {\n          this.errorNumeroSerie();\n          teste.splice(teste.length - 2, 1);\n          const testeArray = teste.toString();\n          this.setState({\n            numeroSerieTest: testeArray.replace(/,/ig, '\\n')\n          });\n        }\n      }\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        nomeProduto: value\n      });\n    };\n\n    this.onChangeQuant = value => {\n      this.setState({\n        quant: value\n      });\n    };\n\n    this.onBlurValidator = e => {\n      const _validators = validators(e.target.name, e.target.value, this.state),\n            nome = _validators.nome,\n            valor = _validators.valor,\n            fieldFalha = _validators.fieldFalha,\n            message = _validators.message;\n\n      this.setState({\n        [nome]: valor,\n        fieldFalha,\n        message\n      });\n    };\n\n    this.Confirm = () => {\n      this.setState({\n        modalConfirm: true\n      });\n    };\n\n    this.modalConfirm = () => React.createElement(Modal, {\n      title: \"Confirmar produto\",\n      visible: this.state.modalConfirm,\n      onOk: this.saveTargetNewEntrada,\n      okText: \"Confirmar\",\n      onCancel: this.handleCancel,\n      cancelText: \"Cancelar\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-fornecedorModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247\n      },\n      __self: this\n    }, \"Produto:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248\n      },\n      __self: this\n    }, this.state.nomeProduto))), React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-fornecedorModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254\n      },\n      __self: this\n    }, \"Quant:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255\n      },\n      __self: this\n    }, this.state.quant))), React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 259\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-fornecedorModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261\n      },\n      __self: this\n    }, \"Estoque:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262\n      },\n      __self: this\n    }, this.state.estoque))), React.createElement(\"div\", {\n      className: \"linhaModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-fornecedorModal-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268\n      },\n      __self: this\n    }, \"Fornecedor:\"), React.createElement(\"label\", {\n      className: \"label-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269\n      },\n      __self: this\n    }, this.state.fornecedor))));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"div-card-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"linhaTexto-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279\n      },\n      __self: this\n    }, \"Nova entrada\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-nome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textNome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284\n      },\n      __self: this\n    }, \"Nome do produto:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.nomeProduto ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"nomeProduto\",\n      value: this.state.nomeProduto,\n      placeholder: \"Digite o nome do produto\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286\n      },\n      __self: this\n    }), this.state.fieldFalha.nomeProduto ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299\n      },\n      __self: this\n    }, this.state.message.nomeProduto) : null)), React.createElement(\"div\", {\n      className: \"div-estoque-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306\n      },\n      __self: this\n    }, \"Estoque:\"), React.createElement(Select, {\n      value: this.state.estoque,\n      style: {\n        width: '100%'\n      },\n      onChange: this.onChangeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308\n      },\n      __self: this\n    }, \"REALPONTO\"), React.createElement(Option, {\n      value: \"NOVA REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309\n      },\n      __self: this\n    }, \"NOVA REALPONTO\"), React.createElement(Option, {\n      value: \"PONTOREAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310\n      },\n      __self: this\n    }, \"PONTOREAL\")))), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-fornecedor-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317\n      },\n      __self: this\n    }, \"Fornecedor:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.fornecedor ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"fornecedor\",\n      value: this.state.fornecedor,\n      placeholder: \"Digite o fornecedor\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319\n      },\n      __self: this\n    }), this.state.fieldFalha.fornecedor ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332\n      },\n      __self: this\n    }, this.state.message.fornecedor) : null)), React.createElement(\"div\", {\n      className: \"div-quant-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 338\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 339\n      },\n      __self: this\n    }, \"Quant:\"), React.createElement(InputNumber, {\n      min: 1,\n      defaultValue: this.state.quant,\n      style: {\n        width: '100%'\n      },\n      value: this.state.quant,\n      onChange: this.onChangeQuant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340\n      },\n      __self: this\n    }))), this.state.serial ? React.createElement(\"div\", {\n      className: \"div-button-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-serial-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textSerial-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 346\n      },\n      __self: this\n    }, \"N\\xFAmero de s\\xE9rie:\"), React.createElement(TextArea, {\n      className: \"input-100\",\n      placeholder: \"Digite o n\\xFAmero de s\\xE9rie\",\n      autosize: {\n        minRows: 2,\n        maxRows: 4\n      },\n      rows: 4,\n      name: \"numeroSerie\",\n      value: this.state.numeroSerieTest,\n      onChange: this.filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 347\n      },\n      __self: this\n    })), React.createElement(Button, {\n      className: \"button\",\n      type: \"primary\",\n      onClick: this.messagesError,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 357\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(this.modalConfirm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }), \" \") : React.createElement(\"div\", {\n      className: \"div-button-entrada1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      type: \"primary\",\n      onClick: this.messagesError,\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358\n      },\n      __self: this\n    }, \"Salvar\"), React.createElement(this.modalConfirm, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 359\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default NovaEntrada;","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/pages/Cadastros/NovaEntrada/EntradaContainer/index.js"],"names":["React","Component","Input","Select","InputNumber","Button","Modal","message","validators","newEntrada","getItens","Option","TextArea","NovaEntrada","state","itemArray","serial","numeroSerieTest","messageError","messageSucesso","estoque","nomeProduto","fornecedor","quant","modalConfirm","arrayProdutos","fieldFalha","componentDidMount","getAllItens","setState","loading","then","resposta","data","handleOk","handleCancel","success","error","errorNumeroSerie","errorNome","errorForn","errorOsDois","messagesError","Confirm","onChangeSelect","value","saveTargetNewEntrada","values","amountAdded","stockBase","responsibleUser","console","log","status","fields","field","messageSuccess","filter","e","target","teste","split","test","length","count","map","valor","splice","testeArray","toString","replace","onChange","name","handleChange","onChangeQuant","onBlurValidator","nome","render","width","minRows","maxRows"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport { Input, Select, InputNumber, Button, Modal, message } from 'antd'\nimport { validators } from './validators'\nimport { newEntrada } from '../../../../services/entrada'\nimport { getItens } from '../../../../services/produto';\n\n\nconst { Option } = Select;\nconst { TextArea } = Input;\n\n\nclass NovaEntrada extends Component {\n\n  state = {\n    itemArray:[],\n    serial: true,\n    numeroSerieTest: [],\n    messageError: false,\n    messageSucesso: false,\n    estoque: 'REALPONTO',\n    nomeProduto: '',\n    fornecedor: '',\n    quant: '1',\n    modalConfirm: false,\n    arrayProdutos: [],\n    fieldFalha: {\n      nomeProduto: false,\n      fornecedor: false\n    },\n    message: {\n      nomeProduto: '',\n      fornecedor: '',\n    },\n  }\n\n  componentDidMount = async () => {\n    await this.getAllItens()\n  }\n\n  getAllItens = async () => {\n    this.setState({\n      loading: true,\n    })\n\n    await getItens().then(\n      resposta => this.setState({\n        itemArray: resposta.data,\n      })\n    )\n\n    this.setState({\n      loading: false,\n    })\n  }\n\n  handleOk = () => {\n    this.setState({\n      modalConfirm: false,\n      nomeProduto: '',\n      fornecedor: '',\n      quant: '1'\n    });\n  };\n\n  handleCancel = () => {\n    this.setState({\n      modalConfirm: false,\n    });\n  };\n\n  success = () => {\n    message.success('A entrada foi efetuada');\n  };\n\n  error = () => {\n    message.error('A entrada não foi efetuada');\n  };\n\n  errorNumeroSerie = () => {\n    message.error('Este equipamento ja foi registrado');\n  };\n\n  errorNome = () => {\n    message.error('O nome do produto é obrigatório');\n  };\n\n  errorForn = () => {\n    message.error('O fornecedor é obrigatório');\n  };\n\n  errorOsDois = () => {\n    message.error('O nome do produto e o fornecedor são obrigatórios');\n  };\n\n\n  messagesError = () => {\n    if (this.state.nomeProduto === '' && this.state.fornecedor === '') {\n      this.errorOsDois()\n    } else if (this.state.nomeProduto === '' && this.state.fornecedor !== '') {\n      this.errorNome()\n    } else if (this.state.nomeProduto !== '' && this.state.fornecedor === '') {\n      this.errorForn()\n    } else if (this.state.nomeProduto !== '' && this.state.fornecedor !== '') {\n      this.Confirm()\n    }\n  }\n\n  onChangeSelect = (value) => {\n    this.setState({\n      estoque: value\n    })\n  }\n \n\n  saveTargetNewEntrada = async () => {\n\n    this.setState({\n      loading: true\n    })\n\n    const values = {\n      amountAdded: this.state.quant,\n      stockBase: this.state.estoque,\n      // productId: this.state.produtoId,\n      // companyId: this.state.fornecedor,\n      // serial: this.state.numeroSerieTest,\n      responsibleUser: 'modrp',\n    }\n\n    const resposta = await newEntrada(values)\n\n    console.log(resposta)\n\n    if (resposta.status === 422) {\n\n      this.setState({\n        messageError: true,\n        fieldFalha: resposta.data.fields[0].field,\n        message: resposta.data.fields[0].message,\n      })\n      await this.error()\n      this.setState({\n        loading:false,\n        messageError: false,\n      })\n    } if (resposta.status === 200) {\n\n      this.setState({\n        estoque: 'REALPONTO',\n        nomeProduto: '',\n        fornecedor: '',\n        quant: '1',\n        numeroSerieTest: [],\n        messageSuccess: true,\n      })\n      await this.success()\n      this.setState({\n        loading:false,\n        messageSuccess: false\n      })\n    }\n  }\n\n  filter = async (e) => {\n\n    await this.setState({\n      numeroSerieTest: e.target.value\n    })\n\n    const teste = this.state.numeroSerieTest.split(/\\n/, 10)\n\n    if (/\\n/.test(this.state.numeroSerieTest[this.state.numeroSerieTest.length - 1])) {\n\n      let count = 0\n\n      // eslint-disable-next-line array-callback-return\n      teste.map((valor) => {\n        if (valor === teste[teste.length - 2]) count++\n      })\n\n      if (count > 1) {\n\n        this.errorNumeroSerie()\n\n        teste.splice(teste.length - 2, 1)\n\n        const testeArray = teste.toString()\n\n        this.setState({\n          numeroSerieTest: testeArray.replace(/,/ig, '\\n')\n        })\n      }\n    }\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (value) => {\n    this.setState({\n      nomeProduto: value\n    })\n  }\n\n  onChangeQuant = (value) => {\n    this.setState({\n      quant: value\n    })\n  }\n\n  onBlurValidator = (e) => {\n    const {\n      nome,\n      valor,\n      fieldFalha,\n      message\n    } = validators(e.target.name, e.target.value, this.state)\n\n    this.setState({\n      [nome]: valor,\n      fieldFalha,\n      message\n    })\n  }\n\n  Confirm = () => {\n    this.setState({\n      modalConfirm: true\n    })\n  }\n\n  modalConfirm = () => (\n    <Modal\n      title=\"Confirmar produto\"\n      visible={this.state.modalConfirm}\n      onOk={this.saveTargetNewEntrada}\n      okText='Confirmar'\n      onCancel={this.handleCancel}\n      cancelText='Cancelar'\n    >\n      <div className='linhaModal-entrada'>\n        <div className='div-fornecedorModal-entrada'>\n          <div className='div-text-entrada'>Produto:</div>\n          <label className='label-entrada'>{this.state.nomeProduto}</label>\n        </div>\n      </div>\n\n      <div className='linhaModal-entrada'>\n        <div className='div-fornecedorModal-entrada'>\n          <div className='div-text-entrada'>Quant:</div>\n          <label className='label-entrada'>{this.state.quant}</label>\n        </div>\n      </div>\n\n      <div className='linhaModal-entrada'>\n        <div className='div-fornecedorModal-entrada'>\n          <div className='div-text-entrada'>Estoque:</div>\n          <label className='label-entrada'>{this.state.estoque}</label>\n        </div>\n      </div>\n\n      <div className='linhaModal-entrada'>\n        <div className='div-fornecedorModal-entrada'>\n          <div className='div-text-entrada'>Fornecedor:</div>\n          <label className='label-entrada'>{this.state.fornecedor}</label>\n        </div>\n      </div>\n    </Modal>\n  )\n\n  render() {\n    return (\n      <div className='div-card-entrada'>\n        <div className='linhaTexto-entrada'>\n          <h1 className='h1-entrada'>Nova entrada</h1>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-nome-entrada'>\n            <div className='div-textNome-entrada'>Nome do produto:</div>\n            <div className='div-inputs'>\n              <Input\n                className={\n                  this.state.fieldFalha.nomeProduto ?\n                    'div-inputError' :\n                    'input-100'}\n                style={{ width: '100%' }}\n                name='nomeProduto'\n                value={this.state.nomeProduto}\n                placeholder=\"Digite o nome do produto\"\n                onChange={this.onChange}\n                onBlur={this.onBlurValidator}\n              />\n              {this.state.fieldFalha.nomeProduto ?\n                <p className='div-feedbackError'>\n                  {this.state.message.nomeProduto}\n                </p> : null}\n            </div>\n          </div>\n\n          <div className='div-estoque-entrada'>\n            <div className='div-text-entrada'>Estoque:</div>\n            <Select value={this.state.estoque} style={{ width: '100%' }} onChange={this.onChangeSelect} >\n              <Option value='REALPONTO'>REALPONTO</Option>\n              <Option value='NOVA REALPONTO'>NOVA REALPONTO</Option>\n              <Option value='PONTOREAL'>PONTOREAL</Option>\n            </Select>\n          </div>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-fornecedor-entrada'>\n            <div className='div-text-entrada'>Fornecedor:</div>\n            <div className='div-inputs'>\n              <Input\n                className={\n                  this.state.fieldFalha.fornecedor ?\n                    'div-inputError' :\n                    'input-100'}\n                style={{ width: '100%' }}\n                name='fornecedor'\n                value={this.state.fornecedor}\n                placeholder=\"Digite o fornecedor\"\n                onChange={this.onChange}\n                onBlur={this.onBlurValidator}\n              />\n              {this.state.fieldFalha.fornecedor ?\n                <p className='div-feedbackError'>\n                  {this.state.message.fornecedor}\n                </p> : null}\n            </div>\n          </div>\n\n          <div className='div-quant-entrada'>\n            <div className='div-text-entrada'>Quant:</div>\n            <InputNumber min={1} defaultValue={this.state.quant} style={{width: '100%'}} value={this.state.quant} onChange={this.onChangeQuant} />\n          </div>\n        </div>\n        \n        {this.state.serial ? <div className='div-button-entrada'>\n          <div className='div-serial-entrada'>\n            <div className='div-textSerial-entrada'>Número de série:</div>\n            <TextArea\n              className='input-100'\n              placeholder=\"Digite o número de série\"\n              autosize={{ minRows: 2, maxRows: 4 }}\n              rows={4}\n              name='numeroSerie'\n              value={this.state.numeroSerieTest}\n              onChange={this.filter}\n            />\n          </div>\n          <Button className='button' type=\"primary\" onClick={this.messagesError} loading={this.state.loading}>Salvar</Button>\n          <this.modalConfirm /> </div>: <div className='div-button-entrada1'><Button className='button' type=\"primary\" onClick={this.messagesError} loading={this.state.loading}>Salvar</Button>\n          <this.modalConfirm /></div>}\n          \n        </div>\n    )\n  }\n}\n\nexport default NovaEntrada"]},"metadata":{},"sourceType":"module"}