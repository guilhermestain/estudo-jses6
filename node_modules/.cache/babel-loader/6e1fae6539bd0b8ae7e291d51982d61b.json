{"ast":null,"code":"import axios from 'axios';\nimport { BACKEND_URL } from './var';\nimport { store } from '../App';\nexport const getCarro = async query => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.get(\"\".concat(BACKEND_URL, \"/api/car\"), {\n    headers: headers,\n    params: {}\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};\nexport const getTipo = async query => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.get(\"\".concat(BACKEND_URL, \"/api/equipModel/getAllType\"), {\n    headers: headers,\n    params: {}\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};\nexport const newMarca = async values => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.post(\"\".concat(BACKEND_URL, \"/api/mark\"), values, {\n    headers: headers\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};\nexport const newTipo = async values => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.post(\"\".concat(BACKEND_URL, \"/api/equipModel/addType\"), values, {\n    headers: headers\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};\nexport const newFabricante = async values => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.post(\"\".concat(BACKEND_URL, \"/api/manufacturer\"), values, {\n    headers: headers\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};\nexport const newProduto = async values => {\n  const storeObject = store.getState();\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username\n  };\n  let response = {};\n  await axios.post(\"\".concat(BACKEND_URL, \"/api/product\"), values, {\n    headers: headers\n  }).then(resp => {\n    response = resp;\n  }).catch(error => {\n    if (error.response) {\n      response = error.response;\n    } else {\n      console.log('Error', error.message);\n    }\n  });\n  return response;\n};","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/services/produto.js"],"names":["axios","BACKEND_URL","store","getCarro","query","storeObject","getState","headers","token","auth","username","response","get","params","then","resp","catch","error","console","log","message","getTipo","newMarca","values","post","newTipo","newFabricante","newProduto"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { BACKEND_URL } from './var'\nimport { store } from '../App'\n\n\n\nexport const getCarro = async (query) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.get(`${BACKEND_URL}/api/car`, { headers: headers, params: { } }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n} \n\nexport const getTipo = async (query) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.get(`${BACKEND_URL}/api/equipModel/getAllType`, { headers: headers, params: { } }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n} \n\nexport const newMarca = async (values) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.post(`${BACKEND_URL}/api/mark`, values, { headers: headers }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n}\n\n\nexport const newTipo = async (values) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.post(`${BACKEND_URL}/api/equipModel/addType`, values, { headers: headers }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n}\n\n\nexport const newFabricante = async (values) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.post(`${BACKEND_URL}/api/manufacturer`, values, { headers: headers }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n}\n\n\nexport const newProduto = async (values) => {\n  const storeObject = store.getState()\n\n  const headers = {\n    token: storeObject.auth.token,\n    username: storeObject.auth.username,\n  }\n\n  let response = {}\n\n  await axios.post(`${BACKEND_URL}/api/product`, values, { headers: headers }).then(\n    resp => {\n      response = resp\n    }\n  ).catch((error) => {\n    if (error.response) {\n      response = error.response\n    } else {\n      console.log('Error', error.message);\n    }\n  })\n  return response\n}"]},"metadata":{},"sourceType":"module"}