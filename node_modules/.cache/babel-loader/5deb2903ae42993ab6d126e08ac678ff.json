{"ast":null,"code":"var _jsxFileName = \"/home/guilhermestain/development/estoque/estoque-front/src/pages/NovaEntrada/EntradaContainer/index.js\";\nimport React, { Component } from 'react';\nimport './index.css';\nimport { Input, Select, InputNumber, Button, message } from 'antd';\nimport { validators } from './validators';\nconst Option = Select.Option;\n\nclass NovaEntrada extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      messageError: false,\n      messageSucesso: false,\n      estoque: 'REALPONTO',\n      nomeProduto: '',\n      fornecedor: '',\n      quant: '1',\n      arrayProdutos: [],\n      carrinho: [],\n      fieldFalha: {\n        nomeProduto: false,\n        fornecedor: false\n      },\n      message: {\n        nomeProduto: '',\n        fornecedor: ''\n      }\n    };\n\n    this.success = () => {\n      message.success('Entrada realizada com sucesso');\n    };\n\n    this.error = () => {\n      message.error('Entrada não foi realizada com sucesso');\n    };\n\n    this.errorNome = () => {\n      message.error('O nome do produto é obrigatório');\n    };\n\n    this.errorForn = () => {\n      message.error('O fornecedor é obrigatório');\n    };\n\n    this.errorOsDois = () => {\n      message.error('O nome do produto e o fornecedor são obrigatórios');\n    };\n\n    this.funcaoBosta = () => {\n      if (this.state.nomeProduto === '' && this.state.fornecedor === '') {\n        this.errorOsDois();\n      } else if (this.state.nomeProduto === '' && this.state.fornecedor !== '') {\n        this.errorNome();\n      } else if (this.state.nomeProduto !== '' && this.state.fornecedor === '') {\n        this.errorForn();\n      } else if (this.state.nomeProduto !== '' && this.state.fornecedor !== '') {\n        this.add();\n      }\n    };\n\n    this.onChangeSelect = value => {\n      this.setState({\n        estoque: value\n      });\n    };\n\n    this.onChange = e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        nomeProduto: value\n      });\n    };\n\n    this.onChangeQuant = value => {\n      this.setState({\n        quant: value\n      });\n    };\n\n    this.onBlurValidator = e => {\n      const _validators = validators(e.target.name, e.target.value, this.state),\n            nome = _validators.nome,\n            valor = _validators.valor,\n            fieldFalha = _validators.fieldFalha,\n            message = _validators.message;\n\n      this.setState({\n        [nome]: valor,\n        fieldFalha,\n        message\n      });\n    };\n\n    this.add = async () => {\n      await this.setState({\n        carrinho: [{\n          nomeProdutoCarrinho: this.state.nomeProduto,\n          quantCarrinho: this.state.quant,\n          fornecedorCarrinho: this.state.fornecedor\n        }, ...this.state.carrinho]\n      });\n      await this.setState({\n        nomeProduto: '',\n        fornecedor: '',\n        quant: '1'\n      });\n    };\n\n    this.remove = value => {\n      const oldCarrinho = this.state.carrinho;\n      const newCarrinho = oldCarrinho.filter(valor => valor !== value);\n      this.setState({\n        carrinho: newCarrinho\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"div-card-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"linhaTexto-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, \"Nova entrada\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-nome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-textNome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, \"Nome do produto:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.nomeProduto ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"nomeProduto\",\n      value: this.state.nomeProduto,\n      placeholder: \"Digite o nome do produto\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), this.state.fieldFalha.nomeProduto ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, this.state.message.nomeProduto) : null)), React.createElement(\"div\", {\n      className: \"div-estoque-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, \"Estoque:\"), React.createElement(Select, {\n      value: this.state.estoque,\n      style: {\n        width: '100%'\n      },\n      onChange: this.onChangeSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160\n      },\n      __self: this\n    }, React.createElement(Option, {\n      value: \"REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, \"REALPONTO\"), React.createElement(Option, {\n      value: \"NOVA REALPONTO\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, \"NOVA REALPONTO\"), React.createElement(Option, {\n      value: \"PONTOREAL\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, \"PONTOREAL\")))), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-nome-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"Fornecedor:\"), React.createElement(\"div\", {\n      className: \"div-inputs\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(Input, {\n      className: this.state.fieldFalha.fornecedor ? 'div-inputError' : 'input-100',\n      style: {\n        width: '100%'\n      },\n      name: \"fornecedor\",\n      value: this.state.fornecedor,\n      placeholder: \"Digite o fornecedor\",\n      onChange: this.onChange,\n      onBlur: this.onBlurValidator,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172\n      },\n      __self: this\n    }), this.state.fieldFalha.fornecedor ? React.createElement(\"p\", {\n      className: \"div-feedbackError\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.message.fornecedor) : null)), React.createElement(\"div\", {\n      className: \"div-quant-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"div-text-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }, \"Quant:\"), React.createElement(InputNumber, {\n      min: 1,\n      defaultValue: this.state.quant,\n      value: this.state.quant,\n      onChange: this.onChangeQuant,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    })), React.createElement(Button, {\n      type: \"primary\",\n      className: \"button\",\n      onClick: this.funcaoBosta,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196\n      },\n      __self: this\n    }, \"Adicionar\")), React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      className: \"h4-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207\n      },\n      __self: this\n    }, \"Produtos selecionados\")), this.state.carrinho.length === 0 ? null : this.state.carrinho.map(valor => React.createElement(\"div\", {\n      className: \"linha1-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"h1-produtos-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212\n      },\n      __self: this\n    }, valor.nomeProdutoCarrinho), React.createElement(\"h1\", {\n      className: \"h1-produtos-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213\n      },\n      __self: this\n    }, valor.quantCarrinho, \" UN\"), React.createElement(\"h1\", {\n      className: \"h1-fornecedor-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214\n      },\n      __self: this\n    }, valor.fornecedorCarrinho, \" UN\"), React.createElement(Button, {\n      type: \"primary\",\n      className: \"button-remove-entrada\",\n      onClick: () => this.remove(valor),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215\n      },\n      __self: this\n    }, \"Remover\"))), React.createElement(\"div\", {\n      className: \"linha-button-entrada\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(Button, {\n      className: \"button\",\n      type: \"primary\",\n      loading: this.state.loading,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    }, \"Salvar\")));\n  }\n\n}\n\nexport default NovaEntrada;","map":{"version":3,"sources":["/home/guilhermestain/development/estoque/estoque-front/src/pages/NovaEntrada/EntradaContainer/index.js"],"names":["React","Component","Input","Select","InputNumber","Button","message","validators","Option","NovaEntrada","state","messageError","messageSucesso","estoque","nomeProduto","fornecedor","quant","arrayProdutos","carrinho","fieldFalha","success","error","errorNome","errorForn","errorOsDois","funcaoBosta","add","onChangeSelect","value","setState","onChange","e","target","name","handleChange","onChangeQuant","onBlurValidator","nome","valor","nomeProdutoCarrinho","quantCarrinho","fornecedorCarrinho","remove","oldCarrinho","newCarrinho","filter","render","width","length","map","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport './index.css'\nimport { Input, Select, InputNumber, Button, message } from 'antd'\nimport { validators } from './validators'\n\n\nconst { Option } = Select;\n\nclass NovaEntrada extends Component {\n\n  state = {\n    messageError: false,\n    messageSucesso: false,\n    estoque: 'REALPONTO',\n    nomeProduto: '',\n    fornecedor: '',\n    quant: '1',\n    arrayProdutos: [],\n    carrinho: [],\n    fieldFalha: {\n      nomeProduto: false,\n      fornecedor: false\n    },\n    message: {\n      nomeProduto: '',\n      fornecedor: '',\n    },\n  }\n\n  success = () => {\n    message.success('Entrada realizada com sucesso');\n  };\n\n  error = () => {\n    message.error('Entrada não foi realizada com sucesso');\n  };\n  \n  errorNome = () => {\n    message.error('O nome do produto é obrigatório');\n  };\n\n  errorForn = () => {\n    message.error('O fornecedor é obrigatório');\n  };\n\n  errorOsDois = () => {\n    message.error('O nome do produto e o fornecedor são obrigatórios');\n  };\n  \n\n  funcaoBosta = () => {\n    if(this.state.nomeProduto === '' && this.state.fornecedor === ''){\n      this.errorOsDois()\n    }else if(this.state.nomeProduto === '' && this.state.fornecedor !== ''){\n      this.errorNome()\n    }else if(this.state.nomeProduto !== '' && this.state.fornecedor === ''){\n      this.errorForn()\n    }else if(this.state.nomeProduto !== '' && this.state.fornecedor !== ''){\n      this.add()\n    }\n  }\n\n  onChangeSelect = (value) => {\n    this.setState({\n      estoque: value\n    })\n  }\n\n  onChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  handleChange = (value) => {\n    this.setState({\n      nomeProduto: value\n    })\n  }\n\n  onChangeQuant = (value) => {\n    this.setState({\n      quant: value\n    })\n  }\n\n  onBlurValidator = (e) => {\n    const {\n      nome,\n      valor,\n      fieldFalha,\n      message\n    } = validators(e.target.name, e.target.value, this.state)\n\n    this.setState({\n      [nome]: valor,\n      fieldFalha,\n      message\n    })\n  }\n\n  add = async () => {\n\n    await this.setState({\n      carrinho: [{\n        nomeProdutoCarrinho: this.state.nomeProduto,\n        quantCarrinho: this.state.quant,\n        fornecedorCarrinho: this.state.fornecedor,\n      }, ...this.state.carrinho]\n    })\n\n    await this.setState({\n      nomeProduto: '',\n      fornecedor: '',\n      quant: '1'\n    })\n  }\n\n  remove = (value) => {\n    const oldCarrinho = this.state.carrinho\n    const newCarrinho = oldCarrinho.filter(valor => valor !== value)\n\n    this.setState({\n      carrinho: newCarrinho\n    })\n  }\n\n  render() {\n    return (\n      <div className='div-card-entrada'>\n        <div className='linhaTexto-entrada'>\n          <h1 className='h1-entrada'>Nova entrada</h1>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-nome-entrada'>\n            <div className='div-textNome-entrada'>Nome do produto:</div>\n            <div className='div-inputs'>\n            <Input\n            className={\n              this.state.fieldFalha.nomeProduto ?\n                'div-inputError' :\n                'input-100'}\n              style={{ width: '100%' }}\n              name='nomeProduto'\n              value={this.state.nomeProduto}\n              placeholder=\"Digite o nome do produto\"\n              onChange={this.onChange}\n              onBlur={this.onBlurValidator}\n            />\n            {this.state.fieldFalha.nomeProduto ?\n              <p className='div-feedbackError'>\n                {this.state.message.nomeProduto}\n              </p> : null}\n              </div>\n          </div>\n\n          <div className='div-estoque-entrada'>\n            <div className='div-text-entrada'>Estoque:</div>\n            <Select value={this.state.estoque} style={{ width: '100%' }} onChange={this.onChangeSelect} >\n              <Option value='REALPONTO'>REALPONTO</Option>\n              <Option value='NOVA REALPONTO'>NOVA REALPONTO</Option>\n              <Option value='PONTOREAL'>PONTOREAL</Option>\n            </Select>\n          </div>\n        </div>\n\n        <div className='linha1-entrada'>\n          <div className='div-nome-entrada'>\n            <div className='div-text-entrada'>Fornecedor:</div>\n            <div className='div-inputs'>\n            <Input\n            className={\n              this.state.fieldFalha.fornecedor ?\n                'div-inputError' :\n                'input-100'}\n              style={{ width: '100%' }}\n              name='fornecedor'\n              value={this.state.fornecedor}\n              placeholder=\"Digite o fornecedor\"\n              onChange={this.onChange}\n              onBlur={this.onBlurValidator}\n            />\n            {this.state.fieldFalha.fornecedor ?\n              <p className='div-feedbackError'>\n                {this.state.message.fornecedor}\n              </p> : null}\n              </div>\n          </div>\n\n          <div className='div-quant-entrada'>\n            <div className='div-text-entrada'>Quant:</div>\n            <InputNumber min={1} defaultValue={this.state.quant} value={this.state.quant} onChange={this.onChangeQuant} />\n          </div>\n\n          <Button\n            type='primary'\n            className='button'\n            onClick={this.funcaoBosta}\n          >\n            Adicionar\n          </Button>\n\n        </div>\n\n        <div className='linha1-entrada'>\n          <h2 className='h4-entrada'>Produtos selecionados</h2>\n        </div>\n\n        {this.state.carrinho.length === 0 ? null : this.state.carrinho.map((valor) =>\n          <div className='linha1-entrada'>\n            <h1 className='h1-produtos-entrada'>{valor.nomeProdutoCarrinho}</h1>\n            <h1 className='h1-produtos-entrada'>{valor.quantCarrinho} UN</h1>\n            <h1 className='h1-fornecedor-entrada'>{valor.fornecedorCarrinho} UN</h1>\n            <Button type='primary' className='button-remove-entrada' onClick={() => this.remove(valor)}>Remover</Button>\n          </div>)}\n\n        <div className='linha-button-entrada'>\n          <Button className='button' type=\"primary\" loading={this.state.loading}>Salvar</Button>\n        </div>\n\n      </div>\n    )\n  }\n}\n\nexport default NovaEntrada"]},"metadata":{},"sourceType":"module"}